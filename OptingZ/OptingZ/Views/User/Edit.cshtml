@model OptingZ.Models.UserMaster

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script type="text/javascript">
        $(document).ready(
            function () {
                $('.datepicker').datepicker({
                    changeMonth: true,
                    changeYear: true,
                    minDate: "-99Y",
                    dateFormat: "dd/mm/yyyy"
                });
            });
    </script>
</head>
<body>
    @using (Html.BeginForm("Edit", "User", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>UserMaster</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.UserFiles != null)
            {
                if (Model.UserFiles.FileType == OptingZ.Models.FileType.ProfilePic)
                {
                    <div class="form-group">
                        <span class="control-label col-md-2"><strong>Current Picture</strong></span>
                        <div class="col-md-10">
                            <img src="~/UserFileMaster?id=@Model.UserFiles.ID" alt="image" />
                        </div>
                    </div>
                }

            }
            <div class="form-group">
                @Html.Label("Pic", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="Pic" name="upload" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetailMaster.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserDetailMaster.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.UserDetailMaster.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetailMaster.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserDetailMaster.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "+0(000)000-0000" } })
                    @Html.ValidationMessageFor(model => model.UserDetailMaster.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetailMaster.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserDetailMaster.Sex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserDetailMaster.Sex, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    Select
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                    <li>Male</li>
                    <li>Female</li>
                </ul>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetailMaster.IsSubscribedByEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.UserDetailMaster.IsSubscribedByEmail)
                        @Html.ValidationMessageFor(model => model.UserDetailMaster.IsSubscribedByEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
